"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.labelHelp = exports.handleLabelCommand = void 0;
const amman_client_1 = require("@metaplex-foundation/amman-client");
const assert_1 = require("assert");
async function handleLabelCommand(labels) {
    const record = labels.reduce((acc, labelAddress) => {
        const split = labelAddress.split(':');
        (0, assert_1.strict)(split.length === 2, `Invalid label '${labelAddress}'`);
        const [label, address] = split;
        acc[label] = address;
        return acc;
    }, {});
    const amman = amman_client_1.Amman.instance({
        ammanClientOpts: { autoUnref: false, ack: true },
    });
    await amman.addr.addLabels(record);
    amman.disconnect();
}
exports.handleLabelCommand = handleLabelCommand;
function labelHelp() {
    return `
Adds the provided PublicKey labels to amman.

  Usage:
    amman label:key label1 label2:value2..labelN:valueN

  Examples:
    amman label payer:DTTTQyKBNPDFa3cHfFJwDWcNPRJgemSisyWaohFbMRPi
    amman label payer:DTTTQyKBNPDFa3cHfFJwDWcNPRJgemSisyWaohFbMRPi mint:3Qpz4ThuLZoera59FxF7SyqyxpFgYMaJknAJpEKX8m93
`;
}
exports.labelHelp = labelHelp;
//# sourceMappingURL=label.js.map