import { Connection, PublicKey } from '@solana/web3.js';
import { AccountDataSerializer } from './account-data-serializer';
export declare type PersistedAccountInfo = {
    pubkey: string;
    account: {
        lamports: number;
        data: [string, 'base64'];
        owner: string;
        executable: boolean;
        rentEpoch: number;
    };
};
export declare type PersistAccount = (accountInfo: PersistedAccountInfo) => Promise<void>;
export declare class MutableAccount<T> {
    private readonly persist;
    readonly pubkey: string;
    private readonly serializer?;
    private lamports;
    private data;
    private owner;
    private executable;
    private rentEpoch;
    private constructor();
    setOwner(owner: PublicKey): this;
    setLamports(lamports: number): this;
    updateData<T>(dataUpdate: Partial<T>): this;
    commit(): Promise<void>;
    private _toPersistedAccountInfo;
    /** @private */
    static from<T>(persist: PersistAccount, address: PublicKey, dataMutator?: AccountDataSerializer<T>, connection?: Connection): Promise<MutableAccount<T>>;
}
