/// <reference types="node" />
export declare type SerializeAccountData<T> = (data: T) => [Buffer, number] | Buffer;
export declare type DeserializeAccountData<T> = (buf: Buffer, offset?: number) => [T, number] | T;
export declare type PlainAccountDataSerializer<T> = {
    serialize: SerializeAccountData<T>;
    deserialize: DeserializeAccountData<T>;
};
export declare type FromArgsAccountDataSerializer<T> = {
    fromArgs(args: T): {
        serialize: SerializeAccountData<T>;
    };
    deserialize: DeserializeAccountData<T>;
};
export declare type AccountDataSerializer<T> = PlainAccountDataSerializer<T> | FromArgsAccountDataSerializer<T>;
export declare function serializeData<T>(serializer: AccountDataSerializer<T>, data: T): Buffer | [Buffer, number];
