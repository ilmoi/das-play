/// <reference types="node" />
import { PublicKey, TransactionInstruction, Signer } from "@solana/web3.js";
import * as borsh from "borsh";
import { bignum } from "@metaplex-foundation/beet";
import { BN, Provider } from "@project-serum/anchor";
export declare const CANDY_WRAPPER_PROGRAM_ID: PublicKey;
export declare function logTx(provider: Provider, txId: string, verbose?: boolean): Promise<void>;
export declare function execute(provider: Provider, instructions: TransactionInstruction[], signers: Signer[], skipPreflight?: boolean, verbose?: boolean): Promise<string>;
export declare function readPublicKey(reader: borsh.BinaryReader): PublicKey;
export declare function val(num: bignum): BN;
export declare function strToByteArray(str: string, padTo?: number): number[];
export declare function strToByteUint8Array(str: string): Uint8Array;
export declare function num32ToBuffer(num: number): Buffer;
export declare function num16ToBuffer(num: number): Buffer;
export declare function arrayEquals(a: any[], b: any[]): boolean;
export declare function bufferToArray(buffer: Buffer): number[];
export declare const trimStringPadding: (str: string) => string;
//# sourceMappingURL=index.d.ts.map